<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="fashionmanager.mapper.ReviewPostMapper">
    <sql id="criteria">
        <trim prefix="WHERE" prefixOverrides="OR">
            <if test='type != null and type.contains("T")'>
                OR rp.title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test='type != null and type.contains("W")'>
                OR m.name LIKE CONCAT('%', #{keyword}, '%')
            </if>
        </trim>
    </sql>
    <resultMap id="selectAllReviewPostMap" type="fashionmanager.dto.SelectAllReviewPostDTO">
        <id property="num" column="num"/>
        <result property="title" column="title"/>
        <result property="memberNum" column="member_num"/>
        <result property="memberName" column="member_name"/>
        <result property="good" column="good"/>
        <result property="cheer" column="cheer"/>
    </resultMap>
    <select id="findAll" resultMap="selectAllReviewPostMap">
        SELECT
                rp.num
              , rp.title
              , rp.member_num
              , rp.good
              , rp.cheer
              , m.name AS member_name
          FROM review_post rp
          LEFT JOIN
               member m ON rp.member_num = m.num
         ORDER BY rp.num desc;
    </select>
    <select id="getListWithPaging" resultMap="selectAllReviewPostMap">
        SELECT
            rp.num, rp.title, rp.member_num, rp.good, rp.cheer, m.name AS member_name
          FROM
               review_post rp
          LEFT JOIN
               member m ON rp.member_num = m.num
        <include refid="criteria"></include>
         ORDER BY
                rp.num DESC
         LIMIT #{amount} OFFSET ${(pageNum - 1) * amount}
    </select>
    <select id="getTotalCount" resultType="_int">
        SELECT
               count(*)
          FROM review_post rp
    </select>
    <resultMap id="selectDetailPostResultMap" type="fashionmanager.dto.SelectDetailReviewPostDTO">
        <id property="num" column="post_num"/>
        <result property="title" column="post_title"/>
        <result property="content" column="post_content"/>
        <result property="good" column="post_good"/>
        <result property="cheer" column="post_cheer"/>
        <result property="temp" column="temp"/>
        <result property="memberNum" column="member_num"/>
        <result property="memberName" column="member_name"/>


        <collection property="items" ofType="fashionmanager.dto.ItemDTO">
            <id property="num" column="item_num"/>
            <result property="name" column="item_name"/>
        </collection>

        <collection property="photos" ofType="fashionmanager.dto.PhotoDTO">
            <id property="num" column="photo_num"/>
            <result property="name" column="photo_name"/>
            <result property="path" column="photo_path"/>
            <result property="photoCategoryNum" column="photo_category_num"/>
        </collection>

    </resultMap>
    <select id="findById" resultMap="selectDetailPostResultMap">
        SELECT
               rp.num AS post_num
             , rp.title AS post_title
             , rp.content AS post_content
             , rp.member_num
             , m.name AS member_name
             , rp.good AS post_good
             , rp.cheer AS post_cheer
             , fi.num AS item_num
             , fi.name AS item_name
             , p.num AS photo_num
             , p.name AS photo_name
             , p.path AS photo_path
             , p.photo_category_num
          FROM review_post rp
          LEFT JOIN member m ON rp.member_num = m.num
          LEFT JOIN review_item ri ON rp.num = ri.post_num
          LEFT JOIN fashion_item fi ON ri.item_num = fi.num
          LEFT JOIN photo p ON rp.num = p.post_num AND p.photo_category_num IN (2,5)
         WHERE rp.num = #{num}
    </select>
</mapper>